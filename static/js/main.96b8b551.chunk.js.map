{"version":3,"sources":["App.js","services/Quote.js","index.js"],"names":["useStyles","createUseStyles","container","width","height","margin","backgroundColor","color","fontFamily","transition","quoteBox","position","top","left","right","padding","display","flexFlow","justifyContent","alignItems","newQuoteBtn","border","borderRadius","colors","App","useState","currQuote","setCurrQuote","quotes","setQuotes","randomColorIndex","Math","floor","random","length","currColor","setCurrColor","styles","useEffect","axios","get","then","res","data","index","className","quote","author","onClick","evt","preventDefault","quoteIndex","async","src","charset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAqBMA,EAAYC,YAAgB,CAC9BC,UAAW,CACPC,MAAO,QACPC,OAAQ,QAER,MAAO,CACHC,OAAQ,GAEZC,gBAAiB,SAAAC,GAAK,OAAIA,GAC1BC,WAAY,sBACZC,WAAW,oBAAD,OAZiB,EAYjB,MAEdC,SAAU,CAENC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,MAEPX,MAAO,OACPC,OAAQ,OAERW,QAAS,OACTC,QAAS,OACTC,SAAU,SACVC,eAAgB,gBAChBC,WAAY,SAEZb,gBAAiB,UACjBC,MAAO,SAAAA,GAAK,OAAIA,GAChBE,WAAW,SAAD,OAhCiB,EAgCjB,MAEd,wCAAyC,CACrCC,SAAU,CACNG,KAAM,MACNC,MAAO,QAGf,uCAAwC,CACpCJ,SAAU,CACNG,KAAM,KACNC,MAAO,OAGfM,YAAa,CAETC,OAAQ,OACRN,QAAS,MACTZ,MAAO,OACPC,OAAQ,MACRkB,aAAc,MAEdhB,gBAAiB,SAAAC,GAAK,OAAIA,GAC1BA,MAAO,UACPE,WAAW,oBAAD,OAxDiB,EAwDjB,QAIZc,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA8CWC,EA3CH,WACR,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAmB,kBAAMC,KAAKC,MAAMD,KAAKE,UAAYV,EAAOW,OAAS,KAC3E,EAAkCT,mBAASF,EAAOO,MAAlD,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAASrC,EAAUmC,GAGzBG,qBAAU,WCjGHC,IAAMC,IAHK,0IAGcC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKf,UDmG5Ca,MAAK,SAAAb,GACFC,EAAUD,GACV,IAAMgB,EAAQb,KAAKC,MAAMD,KAAKE,UAAYL,EAAOM,OAAS,IAC1DP,EAAaC,EAAOgB,SAE7B,IAUH,OAAGlB,EAEK,qBAAKmB,UAAWR,EAAOnC,UAAvB,SACI,sBAAK2C,UAAWR,EAAO3B,SAAvB,UACI,6BAAKgB,EAAUoB,QACf,mCAAMpB,EAAUqB,UAChB,wBAAQF,UAAWR,EAAOjB,YAAa4B,QAbtC,SAAAC,GACbA,EAAIC,iBACJ,IAAMC,EAAapB,KAAKC,MAAMD,KAAKE,UAAYL,EAAOM,OAAS,IAC/DP,EAAaC,EAAOuB,IACpBf,EAAab,EAAOO,OASR,uBACA,wBAAQsB,OAAK,EAACC,IAAI,0CAA0CC,QAAQ,eAM7E,MEhIXC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.96b8b551.chunk.js","sourcesContent":["/* \nTODO:\nrandom quote - DONE\npositioning - DONE\nrandom color - DONE\nfont - DONE\nanimations - DONE\nquotebox size change to fit - DONE\nmobile/responsive - DONE\ntest on mobile\n*/\n\n\nimport React from 'react'\nimport {useState, useEffect} from 'react'\nimport {getQuotes} from './services/Quote'\nimport {createUseStyles} from 'react-jss'\nimport './index.css' // box sizing and stuff\n\nconst ANIMATION_DURATION_SECONDS = 2\n\nconst useStyles = createUseStyles({\n    container: {\n        width: '100vw',\n        height: '100vh',\n\n        '& *': {\n            margin: 0\n        },\n        backgroundColor: color => color,\n        fontFamily: 'Mandali, sans-serif',\n        transition: `background-color ${ANIMATION_DURATION_SECONDS}s`\n    },\n    quoteBox: {\n        // center\n        position: 'absolute',\n        top: '30%',\n        left: '30%',\n        right: '30%',\n        // size \n        width: 'auto',\n        height: 'auto',\n        // center inside\n        padding: '30px',\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        // other stuff\n        backgroundColor: '#ffffff',\n        color: color => color,\n        transition: `color ${ANIMATION_DURATION_SECONDS}s`,\n    },\n    '@media screen and (max-width: 1550px)': {\n        quoteBox: {\n            left: '15%',\n            right: '15%'\n        }\n    },\n    '@media screen and (max-width: 600px)': {\n        quoteBox: {\n            left: '5%',\n            right: '5%'\n        }\n    },\n    newQuoteBtn: {\n        // size and position\n        border: 'none',\n        padding: '5px',\n        width: 'auto',\n        height: '10%',\n        borderRadius: '5px',\n        // other stuff\n        backgroundColor: color => color,\n        color: '#ffffff',\n        transition: `background-color ${ANIMATION_DURATION_SECONDS}s`\n    }\n})\n\nconst colors = [\n    '#16a085',\n    '#27ae60',\n    '#2c3e50',\n    '#f39c12',\n    '#e74c3c',\n    '#9b59b6',\n    '#FB6964',\n    '#342224',\n    '#472E32',\n    '#73A857'\n]\n\nconst App = () => {\n    const [currQuote, setCurrQuote] = useState(null)\n    const [quotes, setQuotes] = useState([])\n\n    const randomColorIndex = () => Math.floor(Math.random() * (colors.length - 1))\n    const [currColor, setCurrColor] = useState(colors[randomColorIndex()])\n\n    const styles = useStyles(currColor)\n\n    // initialize quotes and currentQuote\n    useEffect(() => {\n        getQuotes()\n            .then(quotes => {\n                setQuotes(quotes)\n                const index = Math.floor(Math.random() * (quotes.length - 1))\n                setCurrQuote(quotes[index])\n            })\n    }, [])\n    \n    // Move to another random quote\n    const newQuote = evt => {\n        evt.preventDefault()\n        const quoteIndex = Math.floor(Math.random() * (quotes.length - 1))\n        setCurrQuote(quotes[quoteIndex])\n        setCurrColor(colors[randomColorIndex()])\n    }\n\n    if(currQuote) \n        return (\n            <div className={styles.container}>\n                <div className={styles.quoteBox}>\n                    <h1>{currQuote.quote}</h1>\n                    <p>- {currQuote.author}</p>\n                    <button className={styles.newQuoteBtn} onClick={newQuote}>New Quote</button>\n                    <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n                </div>\n            </div>\n        )\n    \n    // TODO: throw 404\n    return null\n}\n\nexport default App\n","import axios from 'axios'\n\nconst QUOTES_SOURCE = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n\nconst getQuotes = () => {\n    return axios.get(QUOTES_SOURCE).then(res => res.data.quotes)\n}\n\nexport {\n    getQuotes\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}